[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/ibl_to_nwb"]

[project]
name = "ibl_to_nwb"
version="0.3.0"
authors = [
  { name="Cody Baker", email="cody.c.baker.phd@gmail.com" },
]
description = "Tools to convert IBL data to NWB format.."
readme = "README.md"
keywords = ["nwb", "dandi", "ibl"]
license = {file = "license.txt"}
requires-python = ">=3.9"
dependencies = [
    "dandi",
    "neuroconv",
    "spikeinterface",
    "probeinterface",
    "ndx-pose>=0.2.2",
    "ndx-ibl-bwm",
    "ONE-api",
    "ibllib",
    "iblatlas",
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "License :: OSI Approved :: BSD License",
]



[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.toml
  |\.yml
  |\.txt
  |\.sh
  |\.git
  |\.ini
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''



[tool.ruff]
exclude = [
  "*/__init__.py"
]
line-length = 120

[tool.ruff.lint]
select = ["F", "E", "I", "UP031", "UP032"]
ignore = [
    "PTH123",
    "D203",
    "D212",
    "T201",
    "FIX002",
    "TD003",
    "TD002",
    "S101",
    "ICN001",
    "INP001",
    "E501",
]
fixable = ["ALL"]

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
known-first-party = ["ibl_to_nwb"]
